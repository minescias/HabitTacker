#!/usr/bin/env python3

import sys

from detail.genCpp import generateClass
from detail.genCpp import generateFile
from detail.genCpp import generateHeader
from detail.genCpp import generateTest
from detail.addTestImpl import addTestsImpl
from detail.questionsAfterGenerateFile import aksToAddFileToCmake

if len(sys.argv) < 2:
    sys.exit("Missing arguments")

if sys.argv[1] == "help":
    print("Generator of project files. Availiable options:"
          "\n - help - prints this message"
          "\n - file <name> - generates c++ files (.h and .cpp)"
          "\n - header <name> - generates c++ header file (.h only)"
          "\n - class <name> - generates c++ (.h and .cpp)"
          "\n - test <name> - generates c++ test (.cpp only)"
          "\n")

if len(sys.argv) < 3:
    sys.exit("Missing arguments")

fileType = sys.argv[1]
fileName = sys.argv[2]

if fileType == "class":
    generateClass(fileName)
elif fileType == "file":
    generateFile(fileName)
elif fileType == "header":
    generateHeader(fileName)
elif fileType == "test":
    generateTest(fileName)
else:
    sys.exit("Unknown file type")

if (fileType != "header"):
    aksToAddFileToCmake(fileName)

if (fileType != "test"):
    addTestsImpl(fileName)
